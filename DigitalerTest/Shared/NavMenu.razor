@inject NavigationManager MyNavigationManager

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">Digitaler Eignungstest</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span>Startseite
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink href="Beziehungsfragen">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Beziehungsfragen
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink href="Entscheidungsfragen">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Entscheidungsfragen
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink href="MathematischeKenntnisse">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Mathematik
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink href="Rechtschreibung">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Rechtschreibung
            </NavLink>
        </li>
    </ul>
</div>

@code {

    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override void OnInitialized()
    {
        MyNavigationManager.LocationChanged += OnLocationChanges;
    }

    private void OnLocationChanges(object sender, LocationChangedEventArgs e)
    {

    }

}
