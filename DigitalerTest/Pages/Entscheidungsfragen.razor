@page "/Entscheidungsfragen"

@using DigitalerTest.Data
@using System.Timers;

@inject NavigationManager navigationManager
@inject StoppuhrService stoppuhrService
@inject Eignungstest eignungstest

<h3>Entscheidungsfragen</h3>

<form>
    <div class="grid-container">
        <div class="radiobutton">
            @*Frage1*@
            <div class="row">
                <div class="col-md-12">
                    <h5>Wer wählt den Bundespräsidenten?</h5>
                </div>
                <div class="col-md-2">
                    <label><input type="radio" id="Bundeskanzler" name="Bundespräsident" value="Bundeskanzler/T2F1" @onchange="SelectionChanged" checked=@(antwort.Equals(StringComparison.OrdinalIgnoreCase)) /> Bundeskanzler</label>
                </div>
                <div class="col-md-2">
                    <label><input type="radio" id="Bundesversammlung" name="Bundespräsident" value="Bundesversammlung/T2F1" @onchange="SelectionChanged" checked=@(antwort.Equals(StringComparison.OrdinalIgnoreCase)) /> Bundesversammlung</label>
                </div>
                <div class="col-md-2">
                    <label><input type="radio" id="Bundestag" name="Bundespräsident" value="Bundestag/T2F1" @onchange="SelectionChanged" checked=@(antwort.Equals(StringComparison.OrdinalIgnoreCase)) /> Bundestag</label>
                </div>
                <div class="col-md-6">
                    <label><input type="radio" id="Bundesrat" name="Bundespräsident" value="Bundesrat/T2F1" @onchange="SelectionChanged" checked=@(antwort.Equals(StringComparison.OrdinalIgnoreCase)) /> Bundesrat</label>
                </div>
            </div>
            @*Frage2*@
            <div class="row">
                <div class="col-md-12">
                    <h5>Welches Tier passt nicht zu den anderen?</h5>
                </div>
                <div class="col-md-2">
                    <label><input type="radio" id="Delfin" name="Tier" value="Delfin/T2F2" @onchange="SelectionChanged" checked=@(antwort.Equals(StringComparison.OrdinalIgnoreCase)) /> Delfin</label>
                </div>
                <div class="col-md-2">
                    <label><input type="radio" id="Hai" name="Tier" value="Hai/T2F2" @onchange="SelectionChanged" checked=@(antwort.Equals(StringComparison.OrdinalIgnoreCase)) /> Hai</label>
                </div>
                <div class="col-md-2">
                    <label><input type="radio" id="Wal" name="Tier" value="Wal/T2F2" @onchange="SelectionChanged" checked=@(antwort.Equals(StringComparison.OrdinalIgnoreCase)) /> Wal</label>
                </div>
                <div class="col-md-6">
                    <label><input type="radio" id="Seehund" name="Tier" value="Seehund/T2F2" @onchange="SelectionChanged" checked=@(antwort.Equals(StringComparison.OrdinalIgnoreCase)) /> Seehund</label>
                </div>
            </div>
            @*Frage3*@
            <div class="row">
                <div class="col-md-12">
                    <h5>Welche Stadt passt nicht zu den anderen?</h5>
                </div>
                <div class="col-md-2">
                    <label><input type="radio" id="Hamburg" name="Stadt" value="Hamburg/T2F3" @onchange="SelectionChanged" checked=@(antwort.Equals(StringComparison.OrdinalIgnoreCase)) /> Hamburg</label>
                </div>
                <div class="col-md-2">
                    <label><input type="radio" id="Bremen" name="Stadt" value="Bremen/T2F3" @onchange="SelectionChanged" checked=@(antwort.Equals(StringComparison.OrdinalIgnoreCase)) /> Bremen</label>
                </div>
                <div class="col-md-2">
                    <label><input type="radio" id="Berlin" name="Stadt" value="Berlin/T2F3" @onchange="SelectionChanged" checked=@(antwort.Equals(StringComparison.OrdinalIgnoreCase)) /> Berlin</label>
                </div>
                <div class="col-md-6">
                    <label><input type="radio" id="Dresden" name="Stadt" value="Dresden/T2F3" @onchange="SelectionChanged" checked=@(antwort.Equals(StringComparison.OrdinalIgnoreCase)) /> Dresden</label>
                </div>
            </div>
            @*Frage4*@
            <div class="row">
                <div class="col-md-12">
                    <h5>Wann wurde die Berliner Mauer gestürzt?</h5>
                </div>
                <div class="col-md-2">
                    <label><input type="radio" id="1988" name="Mauer" value="1988/T2F4" @onchange="SelectionChanged" checked=@(antwort.Equals(StringComparison.OrdinalIgnoreCase)) /> 1988</label>
                </div>
                <div class="col-md-2">
                    <label><input type="radio" id="1989" name="Mauer" value="1989/T2F4" @onchange="SelectionChanged" checked=@(antwort.Equals(StringComparison.OrdinalIgnoreCase)) /> 1989</label>
                </div>
                <div class="col-md-2">
                    <label><input type="radio" id="1990" name="Mauer" value="1990/T2F4" @onchange="SelectionChanged" checked=@(antwort.Equals(StringComparison.OrdinalIgnoreCase)) /> 1990</label>
                </div>
                <div class="col-md-6">
                    <label><input type="radio" id="1991" name="Mauer" value="1991/T2F4" @onchange="SelectionChanged" checked=@(antwort.Equals(StringComparison.OrdinalIgnoreCase)) /> 1991</label>
                </div>
            </div>
            @*Frage5*@
            <div class="row">
                <div class="col-md-12">
                    <h5>Welches ist das flächenmäßig kleinste Bundesland in Deutschland?</h5>
                </div>
                <div class="col-md-2">
                    <label><input type="radio" id="Bremen" name="Bundesland" value="Bremen/T2F5" @onchange="SelectionChanged" checked=@(antwort.Equals(StringComparison.OrdinalIgnoreCase)) /> Bremen</label>
                </div>
                <div class="col-md-2">
                    <label><input type="radio" id="Hamburg" name="Bundesland" value="Hamburg/T2F5" @onchange="SelectionChanged" checked=@(antwort.Equals(StringComparison.OrdinalIgnoreCase)) /> Hamburg</label>
                </div>
                <div class="col-md-2">
                    <label><input type="radio" id="Saarland" name="Bundesland" value="Saarland/T2F5" @onchange="SelectionChanged" checked=@(antwort.Equals(StringComparison.OrdinalIgnoreCase)) /> Saarland</label>
                </div>
                <div class="col-md-6">
                    <label><input type="radio" id="Sachsen" name="Bundesland" value="Sachsen/T2F5" @onchange="SelectionChanged" checked=@(antwort.Equals(StringComparison.OrdinalIgnoreCase)) /> Sachsen</label>
                </div>
            </div>
            <div class="row">
                <div class="col-md-10">
                    <NavLink href="MathematischeKenntnisseStartseite">
                        <button class="button" @onclick="StoppeStoppuhr">Nächstes Thema</button>
                    </NavLink>
                </div>
            </div>
        </div>
    </div>
</form>

@code{
    private Stoppuhr stoppuhr;
    private Themengebiete themengebiet = new Themengebiete();

    private string antwort = "";

    protected override async Task OnInitializedAsync()
    {
        themengebiet.titel = "Entscheidungsfragen";

        stoppuhr = await stoppuhrService.starteStoppuhrAsync();

        stoppuhr.timer.Elapsed += OnElapsedEvent;
    }

    private void OnElapsedEvent(Object source, ElapsedEventArgs e)
    {
        stoppuhr.stoppeStoppuhr();
        naechstesThema().Wait();
    }

    private async Task naechstesThema()
    {
        await InvokeAsync(() =>
        {
            ThemaHinzufuegen();

            navigationManager.NavigateTo("MathematischeKenntnisseStartseite", true);

            StateHasChanged();
        });
    }

    private void SelectionChanged(ChangeEventArgs args)
    {
        string[] splitAntwort;
        Frage frage = new Frage();

        antwort = args.Value.ToString();

        splitAntwort = antwort.Split("/");

        frage.antwort = splitAntwort[0];
        frage.ID = splitAntwort[1];

        themengebiet.fragen.Add(new Frage()
        {
            antwort = frage.antwort,
            ID = frage.ID
        });
    }

    private void ThemaHinzufuegen()
    {
        eignungstest.themengebiete.Add(themengebiet);
    }

    private void StoppeStoppuhr()
    {
        stoppuhr.stoppeStoppuhr();

        eignungstest.themengebiete.Add(themengebiet);
    }
}
